// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from lego.djinni

#import "LGLegoCore+Private.h"
#import "LGLegoCore.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "LGLegoPlatform+Private.h"
#import "LGSTemplate+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface LGLegoCore ()

- (id)initWithCpp:(const std::shared_ptr<::lego::LegoCore>&)cppRef;

@end

@implementation LGLegoCore {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::lego::LegoCore>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::lego::LegoCore>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nullable LGLegoCore *)create:(nullable id<LGLegoPlatform>)platform {
    try {
        auto objcpp_result_ = ::lego::LegoCore::create(::djinni_generated::LegoPlatform::toCpp(platform));
        return ::djinni_generated::LegoCore::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSString *)getData {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->get_data();
        return ::djinni::String::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)sendData:(nonnull LGSTemplate *)data {
    try {
        _cppRefHandle.get()->send_data(::djinni_generated::STemplate::toCpp(data));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)uploadFile:(nonnull NSData *)fileData {
    try {
        _cppRefHandle.get()->upload_file(::djinni::Binary::toCpp(fileData));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)downloadFile:(nonnull NSString *)fileId {
    try {
        _cppRefHandle.get()->download_file(::djinni::String::toCpp(fileId));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull LGSTemplate *)sendLargeDataOverBridge:(nonnull NSString *)templateId {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->send_large_data_over_bridge(::djinni::String::toCpp(templateId));
        return ::djinni_generated::STemplate::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull LGSTemplate *)generateLargeData:(int32_t)numberOfPages
                          questionsPerPage:(int32_t)questionsPerPage {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->generate_large_data(::djinni::I32::toCpp(numberOfPages),
                                                                       ::djinni::I32::toCpp(questionsPerPage));
        return ::djinni_generated::STemplate::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSString *)prefixString:(nonnull NSString *)input {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->prefix_string(::djinni::String::toCpp(input));
        return ::djinni::String::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto LegoCore::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto LegoCore::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<LGLegoCore>(cpp);
}

}  // namespace djinni_generated

@end
