// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from lego.djinni

#import "LGLegoPlatform+Private.h"
#import "LGLegoPlatform.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#import "LGNetworkCallback+Private.h"
#import "LGSTemplate+Private.h"
#include <stdexcept>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace djinni_generated {

class LegoPlatform::ObjcProxy final
: public ::lego::LegoPlatform
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::djinni_generated::LegoPlatform;
public:
    using ObjcProxyBase::ObjcProxyBase;
    std::string get_storage_path() override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() getStoragePath];
            return ::djinni::String::toCpp(objcpp_result_);
        }
    }
    void data_updated(const ::lego::STemplate & c_data) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() dataUpdated:(::djinni_generated::STemplate::fromCpp(c_data))];
        }
    }
    void http_download_file(const std::string & c_file_id, const std::shared_ptr<::lego::NetworkCallback> & c_callback) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() httpDownloadFile:(::djinni::String::fromCpp(c_file_id))
                                                              callback:(::djinni_generated::NetworkCallback::fromCpp(c_callback))];
        }
    }
    void http_upload_file(const std::string & c_path, const std::shared_ptr<::lego::NetworkCallback> & c_callback) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() httpUploadFile:(::djinni::String::fromCpp(c_path))
                                                            callback:(::djinni_generated::NetworkCallback::fromCpp(c_callback))];
        }
    }
    void http_get_data(const std::shared_ptr<::lego::NetworkCallback> & c_callback) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() httpGetData:(::djinni_generated::NetworkCallback::fromCpp(c_callback))];
        }
    }
    void http_send_data(const ::lego::STemplate & c_data, const std::shared_ptr<::lego::NetworkCallback> & c_callback) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() httpSendData:(::djinni_generated::STemplate::fromCpp(c_data))
                                                          callback:(::djinni_generated::NetworkCallback::fromCpp(c_callback))];
        }
    }
    void grpc_get_data(const std::shared_ptr<::lego::NetworkCallback> & c_callback) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() grpcGetData:(::djinni_generated::NetworkCallback::fromCpp(c_callback))];
        }
    }
    void grpc_send_data(const ::lego::STemplate & c_data, const std::shared_ptr<::lego::NetworkCallback> & c_callback) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() grpcSendData:(::djinni_generated::STemplate::fromCpp(c_data))
                                                          callback:(::djinni_generated::NetworkCallback::fromCpp(c_callback))];
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto LegoPlatform::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto LegoPlatform::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).djinni_private_get_proxied_objc_object();
}

}  // namespace djinni_generated
