// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from lego.djinni

#include "NativeUiManager.hpp"  // my header
#include "Marshal.hpp"
#include "NativeUiObserver.hpp"
#include "NativeUiPlatformSupport.hpp"

namespace djinni_generated {

NativeUiManager::NativeUiManager() : ::djinni::JniInterface<::lego::UiManager, NativeUiManager>("com/mycompany/lego/UiManager$CppProxy") {}

NativeUiManager::~NativeUiManager() = default;


CJNIEXPORT void JNICALL Java_com_mycompany_lego_UiManager_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::lego::UiManager>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_mycompany_lego_UiManager_create(JNIEnv* jniEnv, jobject /*this*/, jobject j_observer, jobject j_platform)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::lego::UiManager::create(::djinni_generated::NativeUiObserver::toCpp(jniEnv, j_observer),
                                           ::djinni_generated::NativeUiPlatformSupport::toCpp(jniEnv, j_platform));
        return ::djinni::release(::djinni_generated::NativeUiManager::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_com_mycompany_lego_UiManager_00024CppProxy_native_1updateTitle(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_newTitle)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::lego::UiManager>(nativeRef);
        ref->update_title(::djinni::String::toCpp(jniEnv, j_newTitle));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_mycompany_lego_UiManager_00024CppProxy_native_1updateFirstName(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_firstName)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::lego::UiManager>(nativeRef);
        ref->update_first_name(::djinni::String::toCpp(jniEnv, j_firstName));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_mycompany_lego_UiManager_00024CppProxy_native_1updateLastName(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_lastName)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::lego::UiManager>(nativeRef);
        ref->update_last_name(::djinni::String::toCpp(jniEnv, j_lastName));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jstring JNICALL Java_com_mycompany_lego_UiManager_00024CppProxy_native_1getTimeString(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::lego::UiManager>(nativeRef);
        auto r = ref->get_time_string();
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
