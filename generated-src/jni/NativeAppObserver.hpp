// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from lego.djinni

#pragma once

#include "app_observer.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeAppObserver final : ::djinni::JniInterface<::lego::AppObserver, NativeAppObserver> {
public:
    using CppType = std::shared_ptr<::lego::AppObserver>;
    using CppOptType = std::shared_ptr<::lego::AppObserver>;
    using JniType = jobject;

    using Boxed = NativeAppObserver;

    ~NativeAppObserver();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeAppObserver>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeAppObserver>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeAppObserver();
    friend ::djinni::JniClass<NativeAppObserver>;
    friend ::djinni::JniInterface<::lego::AppObserver, NativeAppObserver>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::lego::AppObserver
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();


    private:
        friend ::djinni::JniInterface<::lego::AppObserver, ::djinni_generated::NativeAppObserver>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/mycompany/lego/AppObserver") };
};

}  // namespace djinni_generated
