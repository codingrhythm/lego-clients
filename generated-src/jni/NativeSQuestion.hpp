// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from lego.djinni

#pragma once

#include "djinni_support.hpp"
#include "s_question.hpp"

namespace djinni_generated {

class NativeSQuestion final {
public:
    using CppType = ::lego::SQuestion;
    using JniType = jobject;

    using Boxed = NativeSQuestion;

    ~NativeSQuestion();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeSQuestion();
    friend ::djinni::JniClass<NativeSQuestion>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/mycompany/lego/SQuestion") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;I)V") };
    const jfieldID field_mId { ::djinni::jniGetFieldID(clazz.get(), "mId", "Ljava/lang/String;") };
    const jfieldID field_mTitle { ::djinni::jniGetFieldID(clazz.get(), "mTitle", "Ljava/lang/String;") };
    const jfieldID field_mResponseType { ::djinni::jniGetFieldID(clazz.get(), "mResponseType", "I") };
    const jfieldID field_mQuestionDescription { ::djinni::jniGetFieldID(clazz.get(), "mQuestionDescription", "Ljava/lang/String;") };
    const jfieldID field_mOrder { ::djinni::jniGetFieldID(clazz.get(), "mOrder", "I") };
};

}  // namespace djinni_generated
