// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from lego.djinni

#include "NativeLegoPlatform.hpp"  // my header
#include "Marshal.hpp"
#include "NativeNetworkCallback.hpp"
#include "NativeTemplate.hpp"

namespace djinni_generated {

NativeLegoPlatform::NativeLegoPlatform() : ::djinni::JniInterface<::lego::LegoPlatform, NativeLegoPlatform>() {}

NativeLegoPlatform::~NativeLegoPlatform() = default;

NativeLegoPlatform::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeLegoPlatform::JavaProxy::~JavaProxy() = default;

std::string NativeLegoPlatform::JavaProxy::get_storage_path() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLegoPlatform>::get();
    auto jret = (jstring)jniEnv->CallObjectMethod(Handle::get().get(), data.method_getStoragePath);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::String::toCpp(jniEnv, jret);
}
void NativeLegoPlatform::JavaProxy::data_updated(const ::lego::Template & c_data) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLegoPlatform>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_dataUpdated,
                           ::djinni::get(::djinni_generated::NativeTemplate::fromCpp(jniEnv, c_data)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeLegoPlatform::JavaProxy::http_download_file(const std::string & c_file_id, const std::shared_ptr<::lego::NetworkCallback> & c_callback) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLegoPlatform>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_httpDownloadFile,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_file_id)),
                           ::djinni::get(::djinni_generated::NativeNetworkCallback::fromCpp(jniEnv, c_callback)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeLegoPlatform::JavaProxy::http_upload_file(const std::string & c_path, const std::shared_ptr<::lego::NetworkCallback> & c_callback) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLegoPlatform>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_httpUploadFile,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_path)),
                           ::djinni::get(::djinni_generated::NativeNetworkCallback::fromCpp(jniEnv, c_callback)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeLegoPlatform::JavaProxy::http_get_data(const std::shared_ptr<::lego::NetworkCallback> & c_callback) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLegoPlatform>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_httpGetData,
                           ::djinni::get(::djinni_generated::NativeNetworkCallback::fromCpp(jniEnv, c_callback)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeLegoPlatform::JavaProxy::http_send_data(const ::lego::Template & c_data, const std::shared_ptr<::lego::NetworkCallback> & c_callback) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLegoPlatform>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_httpSendData,
                           ::djinni::get(::djinni_generated::NativeTemplate::fromCpp(jniEnv, c_data)),
                           ::djinni::get(::djinni_generated::NativeNetworkCallback::fromCpp(jniEnv, c_callback)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeLegoPlatform::JavaProxy::grpc_get_data(const std::shared_ptr<::lego::NetworkCallback> & c_callback) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLegoPlatform>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_grpcGetData,
                           ::djinni::get(::djinni_generated::NativeNetworkCallback::fromCpp(jniEnv, c_callback)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeLegoPlatform::JavaProxy::grpc_send_data(const ::lego::Template & c_data, const std::shared_ptr<::lego::NetworkCallback> & c_callback) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLegoPlatform>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_grpcSendData,
                           ::djinni::get(::djinni_generated::NativeTemplate::fromCpp(jniEnv, c_data)),
                           ::djinni::get(::djinni_generated::NativeNetworkCallback::fromCpp(jniEnv, c_callback)));
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
