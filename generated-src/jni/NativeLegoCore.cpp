// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from lego.djinni

#include "NativeLegoCore.hpp"  // my header
#include "Marshal.hpp"
#include "NativeLegoPlatform.hpp"
#include "NativeTemplate.hpp"

namespace djinni_generated {

NativeLegoCore::NativeLegoCore() : ::djinni::JniInterface<::lego::LegoCore, NativeLegoCore>("com/mycompany/lego/LegoCore$CppProxy") {}

NativeLegoCore::~NativeLegoCore() = default;


CJNIEXPORT void JNICALL Java_com_mycompany_lego_LegoCore_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::lego::LegoCore>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_mycompany_lego_LegoCore_create(JNIEnv* jniEnv, jobject /*this*/, jobject j_platform)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::lego::LegoCore::create(::djinni_generated::NativeLegoPlatform::toCpp(jniEnv, j_platform));
        return ::djinni::release(::djinni_generated::NativeLegoCore::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_com_mycompany_lego_LegoCore_00024CppProxy_native_1getData(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::lego::LegoCore>(nativeRef);
        ref->get_data();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_mycompany_lego_LegoCore_00024CppProxy_native_1sendData(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_data)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::lego::LegoCore>(nativeRef);
        ref->send_data(::djinni_generated::NativeTemplate::toCpp(jniEnv, j_data));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_mycompany_lego_LegoCore_00024CppProxy_native_1uploadFile(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jbyteArray j_fileData)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::lego::LegoCore>(nativeRef);
        ref->upload_file(::djinni::Binary::toCpp(jniEnv, j_fileData));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_mycompany_lego_LegoCore_00024CppProxy_native_1downloadFile(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_fileId)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::lego::LegoCore>(nativeRef);
        ref->download_file(::djinni::String::toCpp(jniEnv, j_fileId));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
