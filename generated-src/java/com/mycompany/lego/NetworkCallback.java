// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from lego.djinni

package com.mycompany.lego;

import java.util.concurrent.atomic.AtomicBoolean;

/** Callbacks */
public abstract class NetworkCallback {
    /** http handlers */
    public abstract void onHttpDownloadFileSuccess(String path);

    public abstract void onHttpUploadFileSuccess();

    public abstract void onHttpGetDataSuccess(String path);

    public abstract void onHttpSendDataSuccess();

    /** grpc handlers */
    public abstract void onGrpcGetDataSuccess(Template data);

    public abstract void onGrpcSendDataSuccess();

    private static final class CppProxy extends NetworkCallback
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            destroy();
            super.finalize();
        }

        @Override
        public void onHttpDownloadFileSuccess(String path)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_onHttpDownloadFileSuccess(this.nativeRef, path);
        }
        private native void native_onHttpDownloadFileSuccess(long _nativeRef, String path);

        @Override
        public void onHttpUploadFileSuccess()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_onHttpUploadFileSuccess(this.nativeRef);
        }
        private native void native_onHttpUploadFileSuccess(long _nativeRef);

        @Override
        public void onHttpGetDataSuccess(String path)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_onHttpGetDataSuccess(this.nativeRef, path);
        }
        private native void native_onHttpGetDataSuccess(long _nativeRef, String path);

        @Override
        public void onHttpSendDataSuccess()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_onHttpSendDataSuccess(this.nativeRef);
        }
        private native void native_onHttpSendDataSuccess(long _nativeRef);

        @Override
        public void onGrpcGetDataSuccess(Template data)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_onGrpcGetDataSuccess(this.nativeRef, data);
        }
        private native void native_onGrpcGetDataSuccess(long _nativeRef, Template data);

        @Override
        public void onGrpcSendDataSuccess()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_onGrpcSendDataSuccess(this.nativeRef);
        }
        private native void native_onGrpcSendDataSuccess(long _nativeRef);
    }
}
